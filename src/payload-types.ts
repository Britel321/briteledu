/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    'contact-forms': ContactForm;
    redirects: Redirect;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'contact-forms': ContactFormsSelect<false> | ContactFormsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (string | null) | Media;
  };
  layout: (
    | CallToActionBlock
    | ContentBlock
    | MediaBlock
    | ArchiveBlock
    | SliderBlock
    | AboutBlock
    | ArticleSectionBlock
    | ContentSectionBlock
    | PhotoGalleryBlock
    | VideoGalleryBlock
    | NewsMediaBlock
    | SocialBlock
    | SimpleSliderBlock
    | BannerBlock
    | PrivacyPolicyBlock
    | TermsOfServiceBlock
    | QuoteCarouselBlock
    | FAQBlock
    | UniversitiesBlock
    | BasicSlider
    | UniversityGroupBlock
    | VideoModalHeroBlock
    | JourneyWithUsBlock
    | TestimonialsBlock
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  heroImage?: (string | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (string | Post)[] | null;
  categories?: (string | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (string | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  _key?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      _key?: string | null;
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      _key?: string | null;
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      _key?: string | null;
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      _key?: string | null;
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      _key?: string | null;
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      _key?: string | null;
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      _key?: string | null;
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (string | null) | Category;
  breadcrumbs?:
    | {
        doc?: (string | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (string | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: string | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SliderBlock".
 */
export interface SliderBlock {
  type: 'none' | 'sliderType1';
  slides?:
    | {
        image: string | Media;
        title: string;
        description?: string | null;
        alt: string;
        id?: string | null;
      }[]
    | null;
  autoplaySpeed?: number | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'sliderblock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AboutBlock".
 */
export interface AboutBlock {
  section?: string | null;
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Upload an image. Will be automatically converted to WebP format.
   */
  image?: (string | null) | Media;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'about';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArticleSectionBlock".
 */
export interface ArticleSectionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'articleSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentSectionBlock".
 */
export interface ContentSectionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contentSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PhotoGalleryBlock".
 */
export interface PhotoGalleryBlock {
  heading?: string | null;
  description?: string | null;
  layout: 'grid' | 'masonry' | 'carousel';
  columns?: ('2' | '3' | '4') | null;
  /**
   * Add photos to the gallery
   */
  photos?:
    | {
        image: string | Media;
        title?: string | null;
        description?: string | null;
        /**
         * Alternative text for accessibility. If empty, will use image title or filename.
         */
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  showImageCount?: boolean | null;
  buttonText?: string | null;
  style: 'default' | 'dark' | 'light' | 'minimal';
  id?: string | null;
  blockName?: string | null;
  blockType: 'photoGallery';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "VideoGalleryBlock".
 */
export interface VideoGalleryBlock {
  title?: string | null;
  description?: string | null;
  videos?:
    | {
        title: string;
        /**
         * Enter a YouTube URL (e.g., https://www.youtube.com/watch?v=VIDEO_ID)
         */
        embedUrl: string;
        id?: string | null;
      }[]
    | null;
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'videoGallery';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NewsMediaBlock".
 */
export interface NewsMediaBlock {
  /**
   * This is the section of the news media it fetch from the 5 latest news media from the collection
   */
  section?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'newsMedia';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SocialBlock".
 */
export interface SocialBlock {
  title?: string | null;
  description?: string | null;
  facebook?: {
    enabled?: boolean | null;
    pageUrl?: string | null;
    title?: string | null;
    height?: number | null;
    showHeader?: boolean | null;
    showCover?: boolean | null;
    showFacepile?: boolean | null;
    tabs?: ('timeline' | 'events' | 'messages') | null;
  };
  twitter?: {
    enabled?: boolean | null;
    username?: string | null;
    title?: string | null;
    height?: number | null;
    width?: number | null;
    placeholderText?: string | null;
  };
  youtube?: {
    enabled?: boolean | null;
    title?: string | null;
    videos?:
      | {
          title: string;
          /**
           * The full YouTube embed URL (e.g., https://www.youtube.com/embed/dQw4w9WgXcQ) or regular YouTube URL (e.g., https://www.youtube.com/watch?v=dQw4w9WgXcQ)
           */
          embedUrl?: string | null;
          description?: string | null;
          thumbnail?: (string | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  layout?: {
    columns?: ('1' | '2' | '3') | null;
    spacing?: ('4' | '8' | '12') | null;
    backgroundColor?: ('gray-50' | 'white' | 'blue-50' | 'green-50') | null;
  };
  /**
   * Optional media to display below the social widgets
   */
  media?: (string | null) | Media;
  /**
   * Optional rich text caption to display below the social widgets
   */
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'social';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SimpleSliderBlock".
 */
export interface SimpleSliderBlock {
  slides?:
    | {
        type: 'image' | 'video';
        backgroundImage?: (string | null) | Media;
        /**
         * Use this if you want to provide a direct URL instead of uploading
         */
        backgroundImageUrl?: string | null;
        videoUrl?: string | null;
        posterImage?: (string | null) | Media;
        autoPlay?: boolean | null;
        muted?: boolean | null;
        loop?: boolean | null;
        /**
         * Required for accessibility
         */
        alt: string;
        title?: string | null;
        subtitle?: string | null;
        description?: string | null;
        buttonText?: string | null;
        buttonLink?: string | null;
        textPosition?: ('left' | 'center' | 'right' | 'custom') | null;
        textAlignment?: ('left' | 'center' | 'right') | null;
        /**
         * Opacity of the dark overlay (0 = transparent, 1 = opaque)
         */
        overlayOpacity?: number | null;
        /**
         * Enable for above-the-fold slides for faster loading
         */
        priority?: boolean | null;
        id?: string | null;
      }[]
    | null;
  autoPlaySettings?: {
    autoPlay?: boolean | null;
    /**
     * Time between slide transitions
     */
    interval?: number | null;
    pauseOnHover?: boolean | null;
    pauseOnFocus?: boolean | null;
    /**
     * Loop back to first slide after last slide
     */
    infiniteLoop?: boolean | null;
    /**
     * Index of slide to start from (0-based)
     */
    startFromSlide?: number | null;
  };
  appearance?: {
    /**
     * CSS height value (e.g., 60vh, 500px, 100%)
     */
    height?: string | null;
    /**
     * CSS aspect ratio (e.g., 16/9, 4/3). Overrides height if set.
     */
    aspectRatio?: string | null;
    animation?: ('fade' | 'slide' | 'zoom' | 'flip') | null;
    transitionDuration?: number | null;
    /**
     * Slow zoom effect on images
     */
    kenBurnsEffect?: boolean | null;
    /**
     * Parallax scrolling effect
     */
    parallaxEffect?: boolean | null;
  };
  navigation?: {
    showArrows?: boolean | null;
    arrowStyle?: ('default' | 'minimal' | 'bold') | null;
    showDots?: boolean | null;
    dotStyle?: ('default' | 'minimal' | 'large') | null;
    progressIndicatorStyle?: ('dots' | 'bars' | 'numbers' | 'thumbnails' | 'progress-bar') | null;
    showProgressBar?: boolean | null;
    showPlayPause?: boolean | null;
    showThumbnails?: boolean | null;
  };
  interaction?: {
    enableSwipe?: boolean | null;
    /**
     * Minimum swipe distance to trigger slide change
     */
    swipeThreshold?: number | null;
    enableKeyboardNavigation?: boolean | null;
    fullscreen?: boolean | null;
  };
  performance?: {
    /**
     * Number of nearby images to preload for smoother transitions
     */
    preloadImages?: number | null;
    lazyLoad?: boolean | null;
    /**
     * Automatically optimize image quality based on connection
     */
    enableImageOptimization?: boolean | null;
  };
  accessibility?: {
    /**
     * Descriptive label for screen readers
     */
    ariaLabel?: string | null;
    /**
     * Announce slide changes to screen readers
     */
    announceSlideChanges?: boolean | null;
    /**
     * Enable support for RTL languages
     */
    rtlSupport?: boolean | null;
  };
  advanced?: {
    /**
     * Track slide interactions with Google Analytics
     */
    enableAnalytics?: boolean | null;
    /**
     * Additional CSS classes for custom styling
     */
    customClassName?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'simpleSlider';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PrivacyPolicyBlock".
 */
export interface PrivacyPolicyBlock {
  /**
   * The title of the privacy policy page
   */
  title?: string | null;
  /**
   * Enter the full privacy policy content
   */
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * The date this privacy policy was last updated
   */
  lastUpdated?: string | null;
  /**
   * Email address for privacy-related inquiries
   */
  contactEmail?: string | null;
  /**
   * Phone number for privacy-related inquiries
   */
  contactPhone?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'privacyPolicy';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TermsOfServiceBlock".
 */
export interface TermsOfServiceBlock {
  /**
   * The title of the terms of service page
   */
  title?: string | null;
  /**
   * Enter the full terms of service content
   */
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * The date these terms of service become effective
   */
  effectiveDate?: string | null;
  /**
   * The date these terms of service were last updated
   */
  lastUpdated?: string | null;
  /**
   * Email address for terms of service inquiries
   */
  contactEmail?: string | null;
  /**
   * Phone number for terms of service inquiries
   */
  contactPhone?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'termsOfService';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "QuoteCarouselBlock".
 */
export interface QuoteCarouselBlock {
  /**
   * Optional title for the quote carousel section
   */
  title?: string | null;
  /**
   * Optional subtitle for the quote carousel section
   */
  subtitle?: string | null;
  /**
   * Add testimonials and quotes to display in the carousel
   */
  quotes: {
    /**
     * The testimonial or quote text
     */
    quote: string;
    /**
     * Name of the person who gave the quote
     */
    author: string;
    /**
     * Professional title or role of the author
     */
    title?: string | null;
    /**
     * Company, organization, or affiliation of the author
     */
    organization?: string | null;
    /**
     * Optional profile image of the author
     */
    image?: (string | null) | Media;
    id?: string | null;
  }[];
  /**
   * Automatically rotate through quotes
   */
  autoPlay?: boolean | null;
  /**
   * Time between quote transitions in milliseconds
   */
  interval?: number | null;
  /**
   * Show navigation dots at the bottom
   */
  showDots?: boolean | null;
  /**
   * Show navigation arrows on the sides
   */
  showArrows?: boolean | null;
  /**
   * Show play/pause control button
   */
  showPlayPause?: boolean | null;
  /**
   * Layout style for the quote display
   */
  layout?: ('centered' | 'left' | 'right') | null;
  /**
   * Background color theme for the section
   */
  backgroundColor?: ('light' | 'dark' | 'blue' | 'white') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'quoteCarousel';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock".
 */
export interface FAQBlock {
  /**
   * Main heading for the FAQ section
   */
  title?: string | null;
  /**
   * Optional description text below the title
   */
  subtitle?: string | null;
  /**
   * Allow users to search through FAQ questions
   */
  enableSearch?: boolean | null;
  searchPlaceholder?: string | null;
  layout: 'accordion' | 'grid' | 'tabs' | 'minimal';
  /**
   * Allow multiple FAQ items to be open simultaneously
   */
  allowMultipleOpen?: boolean | null;
  /**
   * Add questions and answers for the FAQ section
   */
  faqs: {
    question: string;
    answer: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    /**
     * Optional category for grouping FAQs
     */
    category?: string | null;
    /**
     * Mark as featured to highlight this FAQ
     */
    featured?: boolean | null;
    /**
     * Keywords for better search functionality
     */
    tags?: string | null;
    id?: string | null;
  }[];
  /**
   * Display category filter buttons
   */
  showCategories?: boolean | null;
  style: 'modern' | 'minimal' | 'corporate' | 'playful' | 'dark';
  accentColor: 'blue' | 'purple' | 'green' | 'orange' | 'pink' | 'teal';
  backgroundColor: 'light' | 'white' | 'gradient' | 'transparent';
  animationStyle: 'smooth' | 'bouncy' | 'spring' | 'minimal';
  id?: string | null;
  blockName?: string | null;
  blockType: 'faq';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "UniversitiesBlock".
 */
export interface UniversitiesBlock {
  universityInfo: {
    name: string;
    tagline?: string | null;
    establishedYear?: string | null;
    location?: string | null;
    applyNowButton?: string | null;
    applyNowButtonUrl?: string | null;
    downloadProspectusButton?: string | null;
    downloadProspectusButtonUrl?: string | null;
  };
  heroImage: string | Media;
  stats?:
    | {
        value: string;
        label: string;
        id?: string | null;
      }[]
    | null;
  navigation?:
    | {
        id: string;
        label: string;
        icon?: string | null;
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        subItems?:
          | {
              id: string;
              label: string;
              content?: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              } | null;
            }[]
          | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'universities';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Basic Slider".
 */
export interface BasicSlider {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  slides?:
    | {
        image: string | Media;
        title: string;
        description?: string | null;
        alt: string;
        id?: string | null;
      }[]
    | null;
  autoplaySpeed?: number | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'basicSlider';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "UniversityGroupBlock".
 */
export interface UniversityGroupBlock {
  variant: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'universityGroup';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "VideoModalHeroBlock".
 */
export interface VideoModalHeroBlock {
  heading: string;
  description: string;
  videoUrl: string;
  thumbnailImage?: (string | null) | Media;
  fallbackThumbnailUrl?: string | null;
  ctaText?: string | null;
  ctaUrl?: string | null;
  style: 'default' | 'dark' | 'light' | 'gradient';
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'videoModalHero';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "JourneyWithUsBlock".
 */
export interface JourneyWithUsBlock {
  heading?: string | null;
  subheading?: string | null;
  leftSectionTitle?: string | null;
  leftSectionDescription?: string | null;
  ctaButtonText?: string | null;
  ctaButtonUrl?: string | null;
  /**
   * Add the journey steps/services to display in the carousel
   */
  services?:
    | {
        title: string;
        /**
         * Use an emoji or unicode character (e.g., 🛂, 📚, ✈️)
         */
        icon: string;
        description: string;
        stepNumber?: string | null;
        bgColor: 'pink' | 'yellow' | 'blue' | 'green' | 'purple' | 'indigo' | 'red' | 'orange';
        id?: string | null;
      }[]
    | null;
  autoSlide?: boolean | null;
  slideInterval?: number | null;
  style: 'default' | 'dark' | 'light' | 'minimal';
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'journeyWithUs';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock".
 */
export interface TestimonialsBlock {
  heading?: string | null;
  description?: string | null;
  /**
   * Add testimonials to display in the carousel
   */
  testimonials?:
    | {
        quote: string;
        name: string;
        designation: string;
        image?: (string | null) | Media;
        /**
         * Used when no profile image is uploaded
         */
        fallbackImageUrl?: string | null;
        company?: string | null;
        rating?: number | null;
        id?: string | null;
      }[]
    | null;
  autoplay?: boolean | null;
  autoplayInterval?: number | null;
  showNavigation?: boolean | null;
  showRatings?: boolean | null;
  style: 'default' | 'dark' | 'light' | 'minimal' | 'gradient';
  backgroundColor: 'slate' | 'white' | 'gray' | 'blue' | 'transparent';
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonials';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-forms".
 */
export interface ContactForm {
  id: string;
  fullName: string;
  email: string;
  phone?: string | null;
  subject: string;
  message: string;
  status?: ('new' | 'in-progress' | 'replied' | 'closed') | null;
  /**
   * IP address of the form submitter
   */
  ipAddress?: string | null;
  /**
   * User agent of the form submitter
   */
  userAgent?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: string;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: string | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        categoryID?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'contact-forms';
        value: string | ContactForm;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'search';
        value: string | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        sliderblock?: T | SliderBlockSelect<T>;
        about?: T | AboutBlockSelect<T>;
        articleSection?: T | ArticleSectionBlockSelect<T>;
        contentSection?: T | ContentSectionBlockSelect<T>;
        photoGallery?: T | PhotoGalleryBlockSelect<T>;
        videoGallery?: T | VideoGalleryBlockSelect<T>;
        newsMedia?: T | NewsMediaBlockSelect<T>;
        social?: T | SocialBlockSelect<T>;
        simpleSlider?: T | SimpleSliderBlockSelect<T>;
        banner?: T | BannerBlockSelect<T>;
        privacyPolicy?: T | PrivacyPolicyBlockSelect<T>;
        termsOfService?: T | TermsOfServiceBlockSelect<T>;
        quoteCarousel?: T | QuoteCarouselBlockSelect<T>;
        faq?: T | FAQBlockSelect<T>;
        universities?: T | UniversitiesBlockSelect<T>;
        basicSlider?: T | BasicSliderSelect<T>;
        universityGroup?: T | UniversityGroupBlockSelect<T>;
        videoModalHero?: T | VideoModalHeroBlockSelect<T>;
        journeyWithUs?: T | JourneyWithUsBlockSelect<T>;
        testimonials?: T | TestimonialsBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SliderBlock_select".
 */
export interface SliderBlockSelect<T extends boolean = true> {
  type?: T;
  slides?:
    | T
    | {
        image?: T;
        title?: T;
        description?: T;
        alt?: T;
        id?: T;
      };
  autoplaySpeed?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AboutBlock_select".
 */
export interface AboutBlockSelect<T extends boolean = true> {
  section?: T;
  richText?: T;
  image?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArticleSectionBlock_select".
 */
export interface ArticleSectionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentSectionBlock_select".
 */
export interface ContentSectionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PhotoGalleryBlock_select".
 */
export interface PhotoGalleryBlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  layout?: T;
  columns?: T;
  photos?:
    | T
    | {
        image?: T;
        title?: T;
        description?: T;
        alt?: T;
        id?: T;
      };
  showImageCount?: T;
  buttonText?: T;
  style?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "VideoGalleryBlock_select".
 */
export interface VideoGalleryBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  videos?:
    | T
    | {
        title?: T;
        embedUrl?: T;
        id?: T;
      };
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NewsMediaBlock_select".
 */
export interface NewsMediaBlockSelect<T extends boolean = true> {
  section?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SocialBlock_select".
 */
export interface SocialBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  facebook?:
    | T
    | {
        enabled?: T;
        pageUrl?: T;
        title?: T;
        height?: T;
        showHeader?: T;
        showCover?: T;
        showFacepile?: T;
        tabs?: T;
      };
  twitter?:
    | T
    | {
        enabled?: T;
        username?: T;
        title?: T;
        height?: T;
        width?: T;
        placeholderText?: T;
      };
  youtube?:
    | T
    | {
        enabled?: T;
        title?: T;
        videos?:
          | T
          | {
              title?: T;
              embedUrl?: T;
              description?: T;
              thumbnail?: T;
              id?: T;
            };
      };
  layout?:
    | T
    | {
        columns?: T;
        spacing?: T;
        backgroundColor?: T;
      };
  media?: T;
  caption?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SimpleSliderBlock_select".
 */
export interface SimpleSliderBlockSelect<T extends boolean = true> {
  slides?:
    | T
    | {
        type?: T;
        backgroundImage?: T;
        backgroundImageUrl?: T;
        videoUrl?: T;
        posterImage?: T;
        autoPlay?: T;
        muted?: T;
        loop?: T;
        alt?: T;
        title?: T;
        subtitle?: T;
        description?: T;
        buttonText?: T;
        buttonLink?: T;
        textPosition?: T;
        textAlignment?: T;
        overlayOpacity?: T;
        priority?: T;
        id?: T;
      };
  autoPlaySettings?:
    | T
    | {
        autoPlay?: T;
        interval?: T;
        pauseOnHover?: T;
        pauseOnFocus?: T;
        infiniteLoop?: T;
        startFromSlide?: T;
      };
  appearance?:
    | T
    | {
        height?: T;
        aspectRatio?: T;
        animation?: T;
        transitionDuration?: T;
        kenBurnsEffect?: T;
        parallaxEffect?: T;
      };
  navigation?:
    | T
    | {
        showArrows?: T;
        arrowStyle?: T;
        showDots?: T;
        dotStyle?: T;
        progressIndicatorStyle?: T;
        showProgressBar?: T;
        showPlayPause?: T;
        showThumbnails?: T;
      };
  interaction?:
    | T
    | {
        enableSwipe?: T;
        swipeThreshold?: T;
        enableKeyboardNavigation?: T;
        fullscreen?: T;
      };
  performance?:
    | T
    | {
        preloadImages?: T;
        lazyLoad?: T;
        enableImageOptimization?: T;
      };
  accessibility?:
    | T
    | {
        ariaLabel?: T;
        announceSlideChanges?: T;
        rtlSupport?: T;
      };
  advanced?:
    | T
    | {
        enableAnalytics?: T;
        customClassName?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock_select".
 */
export interface BannerBlockSelect<T extends boolean = true> {
  style?: T;
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PrivacyPolicyBlock_select".
 */
export interface PrivacyPolicyBlockSelect<T extends boolean = true> {
  title?: T;
  richText?: T;
  lastUpdated?: T;
  contactEmail?: T;
  contactPhone?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TermsOfServiceBlock_select".
 */
export interface TermsOfServiceBlockSelect<T extends boolean = true> {
  title?: T;
  richText?: T;
  effectiveDate?: T;
  lastUpdated?: T;
  contactEmail?: T;
  contactPhone?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "QuoteCarouselBlock_select".
 */
export interface QuoteCarouselBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  quotes?:
    | T
    | {
        quote?: T;
        author?: T;
        title?: T;
        organization?: T;
        image?: T;
        id?: T;
      };
  autoPlay?: T;
  interval?: T;
  showDots?: T;
  showArrows?: T;
  showPlayPause?: T;
  layout?: T;
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock_select".
 */
export interface FAQBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  enableSearch?: T;
  searchPlaceholder?: T;
  layout?: T;
  allowMultipleOpen?: T;
  faqs?:
    | T
    | {
        question?: T;
        answer?: T;
        category?: T;
        featured?: T;
        tags?: T;
        id?: T;
      };
  showCategories?: T;
  style?: T;
  accentColor?: T;
  backgroundColor?: T;
  animationStyle?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "UniversitiesBlock_select".
 */
export interface UniversitiesBlockSelect<T extends boolean = true> {
  universityInfo?:
    | T
    | {
        name?: T;
        tagline?: T;
        establishedYear?: T;
        location?: T;
        applyNowButton?: T;
        applyNowButtonUrl?: T;
        downloadProspectusButton?: T;
        downloadProspectusButtonUrl?: T;
      };
  heroImage?: T;
  stats?:
    | T
    | {
        value?: T;
        label?: T;
        id?: T;
      };
  navigation?:
    | T
    | {
        id?: T;
        label?: T;
        icon?: T;
        content?: T;
        subItems?:
          | T
          | {
              id?: T;
              label?: T;
              content?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Basic Slider_select".
 */
export interface BasicSliderSelect {
  richText?: boolean;
  slides?:
    | boolean
    | {
        image?: boolean;
        title?: boolean;
        description?: boolean;
        alt?: boolean;
        id?: boolean;
      };
  autoplaySpeed?: boolean;
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "UniversityGroupBlock_select".
 */
export interface UniversityGroupBlockSelect<T extends boolean = true> {
  variant?: T;
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "VideoModalHeroBlock_select".
 */
export interface VideoModalHeroBlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  videoUrl?: T;
  thumbnailImage?: T;
  fallbackThumbnailUrl?: T;
  ctaText?: T;
  ctaUrl?: T;
  style?: T;
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "JourneyWithUsBlock_select".
 */
export interface JourneyWithUsBlockSelect<T extends boolean = true> {
  heading?: T;
  subheading?: T;
  leftSectionTitle?: T;
  leftSectionDescription?: T;
  ctaButtonText?: T;
  ctaButtonUrl?: T;
  services?:
    | T
    | {
        title?: T;
        icon?: T;
        description?: T;
        stepNumber?: T;
        bgColor?: T;
        id?: T;
      };
  autoSlide?: T;
  slideInterval?: T;
  style?: T;
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock_select".
 */
export interface TestimonialsBlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  testimonials?:
    | T
    | {
        quote?: T;
        name?: T;
        designation?: T;
        image?: T;
        fallbackImageUrl?: T;
        company?: T;
        rating?: T;
        id?: T;
      };
  autoplay?: T;
  autoplayInterval?: T;
  showNavigation?: T;
  showRatings?: T;
  style?: T;
  backgroundColor?: T;
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  _key?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              _key?: T;
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              _key?: T;
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              _key?: T;
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              _key?: T;
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              _key?: T;
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              _key?: T;
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              _key?: T;
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-forms_select".
 */
export interface ContactFormsSelect<T extends boolean = true> {
  fullName?: T;
  email?: T;
  phone?: T;
  subject?: T;
  message?: T;
  status?: T;
  ipAddress?: T;
  userAgent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        categoryID?: T;
        title?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  mainLogo?: (string | null) | Media;
  navItems?:
    | {
        name: string;
        /**
         * Enter icon text (e.g., for Lucide Icons, emoji, icon name, or unicode)
         */
        icon?: string | null;
        path: string;
        dropdown?:
          | {
              name: string;
              /**
               * Enter icon text (e.g., for Lucide Icons, emoji, icon name, or unicode)
               */
              icon?: string | null;
              path: string;
              subDropdown?:
                | {
                    name: string;
                    /**
                     * Enter icon text (e.g., for Lucide Icons, emoji, icon name, or unicode)
                     */
                    icon?: string | null;
                    path: string;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  mainLogo?: T;
  navItems?:
    | T
    | {
        name?: T;
        icon?: T;
        path?: T;
        dropdown?:
          | T
          | {
              name?: T;
              icon?: T;
              path?: T;
              subDropdown?:
                | T
                | {
                    name?: T;
                    icon?: T;
                    path?: T;
                    id?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    global?: string | null;
    user?: (string | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}